---
 - name: "[{{ vm_name }}]: Create Azure Resource Group"
   azure_rm_resourcegroup:
     name: "{{ group_name }}"
     location: francecentral
     state: present
   register: rg_result

 - name: "[{{ vm_name }}]: Create storage account"
   azure.azcollection.azure_rm_storageaccount:
     resource_group: "{{ group_name }}"
     name: "{{ storage_account_name }}"
     account_type: Standard_LRS
     state: present

 - name: "[{{ vm_name }}]: Create virtual network"
   azure.azcollection.azure_rm_virtualnetwork:
     resource_group: "{{ group_name }}"
     name: "{{ vir_network_name }}"
     address_prefixes: "10.10.0.0/16"

 - name: "[{{ vm_name }}]: Add subnet"
   azure.azcollection.azure_rm_subnet:
     resource_group: "{{ group_name }}"
     name: "{{ subnet_name }}"
     address_prefix: "10.10.0.0/24"
     virtual_network: "{{ vir_network_name }}"

 - name: "[{{ vm_name }}]: Create public ip"
   azure.azcollection.azure_rm_publicipaddress:
     resource_group: "{{ group_name }}"
     allocation_method: Static
     name: "{{ public_ip_name }}"

 - name: "[{{ vm_name }}]: Create security, allow https and ssh"
   azure.azcollection.azure_rm_securitygroup:
     resource_group: "{{ group_name }}"
     name: "{{ security_group_name }}"
     rules:
       - name: SSH
         protocol: Tcp
         destination_port_range: 22
         access: Allow
         priority: 101
         direction: Inbound
       - name: HTTPS
         protocol: "*"
         destination_port_range: 443
         access: Allow
         priority: 310
         direction: Inbound

 - name: "[{{ vm_name }}]: Create NIC"
   azure.azcollection.azure_rm_networkinterface:
     resource_group: "{{ group_name }}"
     name: "{{ nic_name }}"
     virtual_network: "{{ vir_network_name }}"
     subnet: "{{ subnet_name }}"
     public_ip_name: "{{ public_ip_name }}"
     security_group: "{{ security_group_name }}"

 - name: "[{{ vm_name }}]: Remove existing SSH pub key file if it exists"
   file:
     path: "~/.ssh/{{ vm_name }}.pub"
     state: absent
   ignore_errors: yes

 - name: "[{{ vm_name }}]: Remove existing SSH key file if it exists"
   file:
     path: "~/.ssh/{{ vm_name }}"
     state: absent
   ignore_errors: yes

 - name: "[{{ vm_name }}]: Create an SSH key pair"
   shell: "ssh-keygen -t rsa -b 4096 -f ~/.ssh/{{ vm_name }} -N ''"

 - name: "[{{ vm_name }}]: Create virtual machine"
   azure.azcollection.azure_rm_virtualmachine:
     resource_group: "{{ group_name }}"
     name: "{{ vm_name }}"
     vm_size: Standard_F1s
     managed_disk_type: Standard_LRS
     storage_account: "{{ storage_account_name }}"
     storage_container: "{{ vm_name }}"
     storage_blob: "{{ vm_name }}.vhd"
     admin_username: "{{ admin_username }}"
     ssh_password_enabled: false
     ssh_public_keys:
       - path: "/home/{{ admin_username }}/.ssh/authorized_keys"
         key_data: "{{ lookup('file', '~/.ssh/{{ vm_name }}.pub') }}"
     network_interfaces: "{{ nic_name }}"
     os_disk_size_gb: 30
     image:
       offer: 0001-com-ubuntu-server-focal
       publisher: Canonical
       sku: '20_04-lts-gen2'
       version: 20.04.202308310
 
 - name: "[{{ vm_name }}]: Run Azure CLI command to get public IP"
   ansible.builtin.shell: |
     az vm show -d -g "{{ group_name }}" -n "{{ vm_name }}" --query publicIps -o tsv
   register: get_public_ip

 - name: "[{{ vm_name }}]: Fetch host's SSH key fingerprint"
   shell: "ssh-keyscan {{ get_public_ip.stdout }}"
   register: fingerprint_output
   changed_when: false

 - name: "[{{ vm_name }}]: Add fingerprint to known_hosts"
   shell: echo "{{ fingerprint_output.stdout_lines[0] }}" >> ~/.ssh/known_hosts
 
 - name: "[{{ vm_name }}]: Fill up the inventory file"
   blockinfile:
     path: "{{ inventory_file_path }}"
     block: |
       "[{{ host_name }}]
       {{ get_public_ip.stdout }} ansible_ssh_common_args='-i ~/.ssh/{{ vm_name }}'

       "
   create: yes

 - name: "[{{ vm_name }}]: Deploying..."
   wait_for:
     timeout: 15
