---
 - name: Create Azure Resource Group
   azure_rm_resourcegroup:
     name: "{{ az_group_name }}"
     location: francecentral
     state: present
   register: rg_result

 - name: Display the result
   debug:
     var: rg_result

 - name: Create storage account if it doesn't exist
   azure.azcollection.azure_rm_storageaccount:
     resource_group: "{{ az_group_name }}"
     name: "{{ az_storage_account_name }}"
     account_type: Standard_LRS
     state: present

 - name: Create virtual network
   azure.azcollection.azure_rm_virtualnetwork:
     resource_group: "{{ az_group_name }}"
     name: "{{ az_vir_network_name }}"
     address_prefixes: "10.10.0.0/16"

 - name: Add subnet
   azure.azcollection.azure_rm_subnet:
     resource_group: "{{ az_group_name }}"
     name: "{{ az_subnet_name }}"
     address_prefix: "10.10.0.0/24"
     virtual_network: "{{ az_vir_network_name }}"

 - name: Create public ip
   azure.azcollection.azure_rm_publicipaddress:
     resource_group: "{{ az_group_name }}"
     allocation_method: Static
     name: "{{ az_public_ip_name }}"

 - name: Create security group that allows SSH
   azure.azcollection.azure_rm_securitygroup:
     resource_group: "{{ az_group_name }}"
     name: "{{ az_security_group_name }}"
     rules:
       - name: SSH
         protocol: Tcp
         destination_port_range: 22
         access: Allow
         priority: 101
         direction: Inbound
       - name: HTTPS
         protocol: "*"
         destination_port_range: 443
         access: Allow
         priority: 310
         direction: Inbound

 - name: Create NIC
   azure.azcollection.azure_rm_networkinterface:
     resource_group: "{{ az_group_name }}"
     name: "{{ az_nic_name }}"
     virtual_network: "{{ az_vir_network_name }}"
     subnet: "{{ az_subnet_name }}"
     public_ip_name: "{{ az_public_ip_name }}"
     security_group: "{{ az_security_group_name }}"

 - name: Create virtual machine
   azure.azcollection.azure_rm_virtualmachine:
     resource_group: "{{ az_group_name }}"
     name: "{{ az_vm_name }}"
     vm_size: Standard_B2s
     managed_disk_type: Standard_LRS
     storage_account: "{{ az_storage_account_name }}"
     storage_container: "{{ az_vm_name }}"
     storage_blob: "{{ az_vm_name }}.vhd"
     admin_username: "{{ az_vm_admin_username }}"
     admin_password: "{{ az_vm_admin_password }}"
     network_interfaces: "{{ az_nic_name }}"
     os_disk_size_gb: 30
     image:
       offer: 0001-com-ubuntu-server-focal
       publisher: Canonical
       sku: '20_04-lts-gen2'
       version: 20.04.202308310

 - name: Run Azure CLI command to get Public IP
   ansible.builtin.shell: |
     az vm show -d -g "{{ az_group_name }}" -n "{{ az_vm_name }}" --query publicIps -o tsv
   register: public_ip_result

 - name: Wait for 30 seconds
   wait_for:
     timeout: 30

 - name: SSH into the VM and launch inception
   ansible.builtin.shell: |
     sshpass -p "{{ az_vm_admin_password }}" ssh -o StrictHostKeyChecking=no "{{ az_vm_admin_username }}"@"{{ public_ip_result.stdout }}" '
          git clone https://github.com/Obito-git/42_cloud1.git &&
          sudo apt update &&
          sudo apt install -y ansible &&
          ansible-playbook 42_cloud1/inception/setup_inception_VM.yaml -e "wordpress_host="{{ public_ip_result.stdout }}""
        '

 - name: Print Success Message
   debug:
     msg: "{{ az_vm_name }} has been deployed on https://{{ public_ip_result.stdout }}"
